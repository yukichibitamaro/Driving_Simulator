//////////  Driving Simulatorの自動CIビルド・テスト処理  //////////  
/////  Jenkinsのpipeline処理をgroovyにて記載  /////


pipeline {
///// 初期設定 /////
    // Pipeline監視PCの設定(AWSサーバに設定)
    agent {
        label 'master'
    }
    // パラメータ設定
    parameters {
        string(name: 'BRANCH_NAME', defaultValue: '*/feature/CItest', description: 'ブランチ名') // Gitブランチ名
    }
///// メインCI処理 /////
    // 指定ブランチのチェックアウトとコミットID(ハッシュ)の取得
    stages {
        stage('Branch Checkout & Get CommitID') {
            steps {
                script {
                    checkout([$class:'GitSCM', branches:[[name:params.BRANCH_NAME]], userRemoteConfigs:[[url:'https://github.com/yukichibitamaro/Driving_Simulator']]])
                    env.GIT_COMMIT_ID = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
                }
            }
        }
    // MSBuildを実行するFSPの呼び出し(結果をEmail通知する) //
        stage('MSBuild') {
            steps {
                script {
                    // リリースビルドの実行 //
                        def MSbuildResult = build job: '/Common/FSP_MSbuild2022', parameters:[
                            string(name:'SLAVE', value: 'Node_SurfaceLAPTOP4'),
                            string(name:'REMOTE_REPOSITOURY_URL', value: 'https://github.com/yukichibitamaro/Driving_Simulator'),
                            string(name:'MSBUILD_FILE', value: 'Driving_simulator.sln'),
                            string(name:'HASH', value: env.GIT_COMMIT_ID),
                            string(name:'PLATFORM', value: 'x64'),
                            string(name:'COMPOSITION', value: 'Release')]
                }
            }
        }
    }
}

